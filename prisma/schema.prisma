generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Ingredient {
  id        String     @id @default(dbgenerated("uuid_generate_v4()"))
  name      String
  category  String
  materials Material[]

  @@map("Ingredients")
}

model Meal {
  id        String     @id @default(dbgenerated("uuid_generate_v4()"))
  name      String
  location  String
  servings  Int
  materials Material[]
  plan      Plan[]

  @@map("Meals")
}

model Plan {
  id      String  @id @default(dbgenerated("uuid_generate_v4()"))
  meal_id String
  serves  Int
  locked  Boolean
  meal    Meal    @relation(fields: [meal_id], references: [id], onDelete: Cascade)
}

model Material {
  id            String     @id @default(dbgenerated("uuid_generate_v4()"))
  meal_id       String
  ingredient_id String
  unit_id       String
  qty           Float
  ingredient    Ingredient @relation(fields: [ingredient_id], references: [id], onDelete: Cascade)
  meal          Meal       @relation(fields: [meal_id], references: [id], onDelete: Cascade)
  unit          Unit       @relation(fields: [unit_id], references: [id], onDelete: Cascade)

  @@map("Materials")
}

model Unit {
  id       String     @id @default(dbgenerated("uuid_generate_v4()"))
  name     String
  material Material[]

  @@map("Units")
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view RandomMeals {
  id       String  @unique
  name     String?
  location String?
  servings Int?
}
